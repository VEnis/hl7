plugins {
    id "com.dorongold.task-tree" version "1.3"
    id "org.sonarqube" version "2.3" apply false
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

allprojects {
    repositories {
        jcenter()
    }
    group = 'io.github.venis.hl7'

    // JACOCO
    apply plugin: "jacoco"
    jacoco {
        toolVersion = "0.7.9"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile "org.slf4j:slf4j-api:1.7.25"
        compileOnly "org.projectlombok:lombok:1.16.16"

        testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-4'
        testCompile('com.athaydes:spock-reports:1.3.0') {
            transitive = false // this avoids affecting your version of Groovy/Spock
        }
        testCompile 'org.slf4j:slf4j-simple:1.7.25'
    }

    // JACOCO
    jacocoTestReport {
        reports {
            xml.enabled true
            xml.destination "${buildDir}/reports/jacoco/report.xml"
            csv.enabled false
            html.enabled true
            html.destination "${buildDir}/reports/jacoco/html"
        }
    }

    // SONAR
    apply plugin: "org.sonarqube"
    sonarqube {
        properties {
            property "sonar.projectKey", project.getRootProject().getGroup().toString() + ":" + project.getName()
            property "sonar.projectName", project.getRootProject().getGroup().toString() + ":" + project.getName()
        }
    }
}

// Gathering complete code coverage from all sub-projects. Will be used on CI after each module release
task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}